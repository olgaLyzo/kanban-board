{"ast":null,"code":"import{TaskContext}from\"./task-context\";import{useEffect,useState}from\"react\";/*\n\nState\n{\n id: number,\n name: string,\n state: string\n}\n\n{\n\nTask\n{\n    id: number,\n    name: string,\n    description: string | undefined\n    state: string => state.state\n}\n\n */import{jsx as _jsx}from\"react/jsx-runtime\";export const TaskProvider=props=>{const[tasks,setTasks]=useState([]);const[isLoaded,setIsLoaded]=useState(false);const[idCounter,setIdCounter]=useState(0);const states=useState([{id:1,name:'backlog',state:'backlog'},{id:2,name:'ready',state:'ready'},{id:3,name:'in progress',state:'inProgress'},{id:4,name:'finished',state:'finished'}]);const findById=id=>tasks.find(task=>task.id===parseInt(id));useEffect(()=>{if(isLoaded){localStorage.setItem('tasks',JSON.stringify(tasks));}},[tasks,isLoaded]);useEffect(()=>{const tasks=localStorage.getItem('tasks');if(tasks){setTasks(JSON.parse(tasks));}setIsLoaded(true);},[]);const context={states,addTask:name=>{const id=idCounter+1;const task={id,name,state:'backlog'};setIdCounter(id);setTasks([...tasks,task]);},updateTask:item=>{const task=findById(item.id);task.name=item.name;task.description=item.description;setTasks([...tasks]);},removeTask:id=>{const task=findById(id);if(task){setTasks([...tasks.filter(item=>item.id!==task.id)]);}},getTaskById:findById,getTasksByState:state=>{return tasks.filter(task=>task.state===state);},getTasksByExcludedState:state=>{return tasks.filter(task=>task.state!==state);},moveTask:(id,state)=>{const task=findById(id);if(task){task.state=state;}setTasks([...tasks]);},getActiveTaskCount:()=>tasks.filter(task=>task.state==='ready'||task.state==='inProgress').length,getFinishedTaskCount:()=>tasks.filter(task=>task.state==='finished').length};return/*#__PURE__*/_jsx(TaskContext.Provider,{value:context,children:isLoaded&&props.children});};","map":{"version":3,"names":["TaskContext","useEffect","useState","jsx","_jsx","TaskProvider","props","tasks","setTasks","isLoaded","setIsLoaded","idCounter","setIdCounter","states","id","name","state","findById","find","task","parseInt","localStorage","setItem","JSON","stringify","getItem","parse","context","addTask","updateTask","item","description","removeTask","filter","getTaskById","getTasksByState","getTasksByExcludedState","moveTask","getActiveTaskCount","length","getFinishedTaskCount","Provider","value","children"],"sources":["/Users/olyalyzo/projects/canban-board/src/hooks/tasks/task-provider.jsx"],"sourcesContent":["import {TaskContext} from \"./task-context\";\nimport {useEffect, useState} from \"react\";\n\n/*\n\nState\n{\n id: number,\n name: string,\n state: string\n}\n\n{\n\nTask\n{\n    id: number,\n    name: string,\n    description: string | undefined\n    state: string => state.state\n}\n\n */\n\nexport const TaskProvider = (props) => {\n    const [tasks, setTasks] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [idCounter, setIdCounter] = useState(0);\n\n    const states = useState([\n        {id: 1, name: 'backlog', state: 'backlog'},\n        {id: 2, name: 'ready', state: 'ready'},\n        {id: 3, name: 'in progress', state: 'inProgress'},\n        {id: 4, name: 'finished', state: 'finished'}\n    ]);\n\n    const findById = (id) => tasks.find((task) => task.id === parseInt(id));\n\n\n    useEffect(() => {\n        if (isLoaded) {\n            localStorage.setItem('tasks', JSON.stringify(tasks))\n        }\n    }, [tasks, isLoaded])\n\n    useEffect(() => {\n        const tasks = localStorage.getItem('tasks');\n        if (tasks) {\n            setTasks(JSON.parse(tasks))\n        }\n        setIsLoaded(true);\n    }, [])\n\n    const context = {\n        states,\n        addTask: (name) => {\n            const id = idCounter + 1;\n            const task = {\n                id,\n                name,\n                state: 'backlog'\n            }\n\n            setIdCounter(id);\n            setTasks([...tasks, task])\n        },\n        updateTask: (item) => {\n            const task = findById(item.id);\n            task.name = item.name;\n            task.description = item.description;\n            setTasks([...tasks])\n        },\n        removeTask: (id) => {\n            const task = findById(id);\n            if (task) {\n                setTasks([...tasks.filter(item => item.id !== task.id)])\n            }\n        },\n        getTaskById: findById,\n        getTasksByState: (state) => {\n            return tasks.filter(task => task.state === state);\n        },\n        getTasksByExcludedState: (state) => {\n            return tasks.filter(task => task.state !== state);\n        },\n        moveTask: (id, state) => {\n            const task = findById(id);\n            if (task) {\n                task.state = state;\n            }\n            setTasks([...tasks]);\n        },\n        getActiveTaskCount: () =>\n            tasks.filter(task => task.state === 'ready' || task.state === 'inProgress').length,\n        getFinishedTaskCount: () =>\n            tasks.filter(task => task.state === 'finished').length,\n    }\n\n    return <TaskContext.Provider value={context}>{isLoaded && props.children}</TaskContext.Provider>\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}