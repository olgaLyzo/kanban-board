{"ast":null,"code":"var _jsxFileName = \"/Users/olyalyzo/projects/canban-board/src/hooks/tasks/task-provider.jsx\",\n  _s = $RefreshSig$();\nimport { TaskContext } from \"./task-context\";\nimport { useEffect, useState } from \"react\";\n\n/*\n\nState\n{\n id: number,\n name: string,\n state: string\n}\n\n{\n\nTask\n{\n    id: number,\n    name: string,\n    description: string | undefined\n    state: string => state.state\n}\n\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskProvider = props => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [idCounter, setIdCounter] = useState(0);\n  const {\n    states\n  } = useState([{\n    id: 1,\n    name: 'backlog',\n    state: 'backlog'\n  }, {\n    id: 2,\n    name: 'ready',\n    state: 'ready'\n  }, {\n    id: 3,\n    name: 'in progress',\n    state: 'inProgress'\n  }, {\n    id: 4,\n    name: 'finished',\n    state: 'finished'\n  }]);\n  const findById = id => tasks.find(task => task.id === parseInt(id));\n  useEffect(() => {\n    if (isLoaded) {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }, [tasks, isLoaded]);\n  useEffect(() => {\n    const tasks = localStorage.getItem('tasks');\n    if (tasks) {\n      setTasks(JSON.parse(tasks));\n    }\n    setIsLoaded(true);\n  }, []);\n  const context = {\n    states,\n    addTask: name => {\n      const id = idCounter + 1;\n      const task = {\n        id,\n        name,\n        state: 'backlog'\n      };\n      setIdCounter(id);\n      setTasks([...tasks, task]);\n    },\n    updateTask: item => {\n      const task = findById(item.id);\n      task.name = item.name;\n      task.description = item.description;\n      setTasks([...tasks]);\n    },\n    removeTask: id => {\n      const task = findById(id);\n      if (task) {\n        setTasks([...tasks.filter(item => item.id !== task.id)]);\n      }\n    },\n    getTaskById: findById,\n    getTasksByState: state => {\n      return tasks.filter(task => task.state === state);\n    },\n    getTasksByExcludedState: state => {\n      return tasks.filter(task => task.state !== state);\n    },\n    moveTask: (id, state) => {\n      const task = findById(id);\n      if (task) {\n        task.state = state;\n      }\n      setTasks([...tasks]);\n    },\n    getActiveTaskCount: () => tasks.filter(task => task.state === 'ready' || task.state === 'inProgress').length,\n    getFinishedTaskCount: () => tasks.filter(task => task.state === 'finished').length\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: context,\n    children: isLoaded && props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 12\n  }, this);\n};\n_s(TaskProvider, \"ywADxBss5r5Wrhvrf6dHz8w61Iw=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["TaskContext","useEffect","useState","jsxDEV","_jsxDEV","TaskProvider","props","_s","tasks","setTasks","isLoaded","setIsLoaded","idCounter","setIdCounter","states","id","name","state","findById","find","task","parseInt","localStorage","setItem","JSON","stringify","getItem","parse","context","addTask","updateTask","item","description","removeTask","filter","getTaskById","getTasksByState","getTasksByExcludedState","moveTask","getActiveTaskCount","length","getFinishedTaskCount","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olyalyzo/projects/canban-board/src/hooks/tasks/task-provider.jsx"],"sourcesContent":["import {TaskContext} from \"./task-context\";\nimport {useEffect, useState} from \"react\";\n\n/*\n\nState\n{\n id: number,\n name: string,\n state: string\n}\n\n{\n\nTask\n{\n    id: number,\n    name: string,\n    description: string | undefined\n    state: string => state.state\n}\n\n */\n\nexport const TaskProvider = (props) => {\n    const [tasks, setTasks] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [idCounter, setIdCounter] = useState(0);\n\n    const {states} = useState([\n        {id: 1, name: 'backlog', state: 'backlog'},\n        {id: 2, name: 'ready', state: 'ready'},\n        {id: 3, name: 'in progress', state: 'inProgress'},\n        {id: 4, name: 'finished', state: 'finished'}\n    ]);\n\n    const findById = (id) => tasks.find((task) => task.id === parseInt(id));\n\n\n    useEffect(() => {\n        if (isLoaded) {\n            localStorage.setItem('tasks', JSON.stringify(tasks))\n        }\n    }, [tasks, isLoaded])\n\n    useEffect(() => {\n        const tasks = localStorage.getItem('tasks');\n        if (tasks) {\n            setTasks(JSON.parse(tasks))\n        }\n        setIsLoaded(true);\n    }, [])\n\n    const context = {\n        states,\n        addTask: (name) => {\n            const id = idCounter + 1;\n            const task = {\n                id,\n                name,\n                state: 'backlog'\n            }\n\n            setIdCounter(id);\n            setTasks([...tasks, task])\n        },\n        updateTask: (item) => {\n            const task = findById(item.id);\n            task.name = item.name;\n            task.description = item.description;\n            setTasks([...tasks])\n        },\n        removeTask: (id) => {\n            const task = findById(id);\n            if (task) {\n                setTasks([...tasks.filter(item => item.id !== task.id)])\n            }\n        },\n        getTaskById: findById,\n        getTasksByState: (state) => {\n            return tasks.filter(task => task.state === state);\n        },\n        getTasksByExcludedState: (state) => {\n            return tasks.filter(task => task.state !== state);\n        },\n        moveTask: (id, state) => {\n            const task = findById(id);\n            if (task) {\n                task.state = state;\n            }\n            setTasks([...tasks]);\n        },\n        getActiveTaskCount: () =>\n            tasks.filter(task => task.state === 'ready' || task.state === 'inProgress').length,\n        getFinishedTaskCount: () =>\n            tasks.filter(task => task.state === 'finished').length,\n    }\n\n    return <TaskContext.Provider value={context}>{isLoaded && props.children}</TaskContext.Provider>\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}