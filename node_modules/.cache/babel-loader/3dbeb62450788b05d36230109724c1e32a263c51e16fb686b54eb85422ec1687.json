{"ast":null,"code":"import{TaskContext}from'./task-context';import{useEffect,useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";export const TaskProvider=props=>{const[tasks,setTasks]=useState([]);const[isLoaded,setIsLoaded]=useEffect(false);const[states]=useState([{id:1,name:'backlog',state:'backlog'},{id:2,name:'ready',state:'ready'},{id:3,name:'in progress',state:'inProgress'},{id:4,name:'finished',state:'finished'}]);const findById=id=>tasks.find(task=>task.id===parseInt(id));const context={states,addTask:(name,state)=>{const task={id:tasks.length+1,name,state};setTasks([...tasks,task]);},updateTask:item=>{const task=findById(item.id);task.name=item.name;task.description=item.description;setTasks([...tasks]);},removeTask:id=>{const task=findById(id);if(task){setTasks([...tasks.filter(item=>item.id!==task.id)]);}},getTaskById:findById,getTasksByState:state=>{return tasks.filter(task=>task.state===state);},getTasksByExcludedState:state=>{return tasks.filter(task=>task.state!==state);},moveTask:(id,state)=>{const task=findById(id);if(task){task.state=state;}setTasks([...tasks]);},getActiveTaskCount:()=>tasks.filter(task=>task.state==='ready'||task.state==='inProgress').length,getFinishedTaskCount:()=>tasks.filter(task=>task.state==='finished').length};return/*#__PURE__*/_jsxs(TaskContext.Provider,{value:context,children:[\" \",isLoaded&&props.children]});};","map":{"version":3,"names":["TaskContext","useEffect","useState","jsxs","_jsxs","TaskProvider","props","tasks","setTasks","isLoaded","setIsLoaded","states","id","name","state","findById","find","task","parseInt","context","addTask","length","updateTask","item","description","removeTask","filter","getTaskById","getTasksByState","getTasksByExcludedState","moveTask","getActiveTaskCount","getFinishedTaskCount","Provider","value","children"],"sources":["/Users/olyalyzo/projects/canban-board/src/hooks/tasks/task-provider.jsx"],"sourcesContent":["import { TaskContext } from './task-context';\nimport { useEffect, useState } from 'react';\n\nexport const TaskProvider = (props) => {\n\tconst [tasks, setTasks] = useState([]);\n\tconst[isLoaded, setIsLoaded] = useEffect(false);\n\n\tconst [states] = useState([\n\t\t{id:1, name: 'backlog', state:'backlog'},\n\t\t{id:2, name: 'ready', state:'ready'},\n\t\t{id:3, name: 'in progress', state:'inProgress'},\n\t\t{id:4, name: 'finished', state:'finished'}\n\t])\n\tconst findById = (id)=> tasks.find((task)=> task.id === parseInt(id));\n\n\tconst context = {\n\t\tstates,\n\t\taddTask: (name,state) =>{\n\t\t\tconst task = {\n\t\t\t\tid: tasks.length + 1,\n\t\t\t\tname,\n\t\t\t\tstate\n\t\t\t}\n\t\t\tsetTasks([...tasks, task])\n\t\t},\n\t\tupdateTask: (item)=> {\n\t\t\tconst task = findById(item.id);\n\t\t\ttask.name = item.name;\n\t\t\ttask.description = item.description;\n\t\t\tsetTasks([...tasks])\n\t\t},\n\t\tremoveTask: (id) => {\n\t\t\tconst task = findById(id);\n\t\t\tif(task){\n\t\t\t\tsetTasks([...tasks.filter(item=> item.id !== task.id)])\n\t\t\t} \n\t\t},\n\t\tgetTaskById: findById,\n\t\tgetTasksByState: (state) =>{\n\t\t\treturn tasks.filter(task => task.state === state);\n\t\t},\n\t\tgetTasksByExcludedState: (state) => {\n\t\t\treturn tasks.filter(task => task.state !== state);\n\t\t},\n\t\tmoveTask: (id, state) => {\n\t\t\tconst task = findById(id);\n\t\t\tif (task) {\n\t\t\t\ttask.state = state;\n\t\t\t}\n\t\t\tsetTasks([...tasks]);\n\t\t},\n\t\tgetActiveTaskCount: () =>\n\t\t\ttasks.filter(task => task.state === 'ready' || task.state === 'inProgress').length,\n\t\tgetFinishedTaskCount: ()=>\n\t\t\ttasks.filter(task => task.state === 'finished').length,\t\n\t\t\n\t}\n\treturn <TaskContext.Provider value={context}> {isLoaded && props.children}</TaskContext.Provider>\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}