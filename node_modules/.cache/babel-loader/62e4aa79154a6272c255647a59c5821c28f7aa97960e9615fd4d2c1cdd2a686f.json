{"ast":null,"code":"var _jsxFileName = \"/Users/olyalyzo/projects/canban-board/src/components/board/Board.jsx\",\n  _s = $RefreshSig$();\nimport { Column } from \"./column/Column\";\nimport css from './board.module.scss';\nimport { useTasks } from '../../contexts/use-task';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = () => {\n  _s();\n  const [sections, setSections] = useState([{\n    id: 1,\n    title: 'backlog',\n    tasks: [{\n      id: 1,\n      title: 111\n    }]\n  }, {\n    id: 2,\n    title: 'ready',\n    tasks: []\n  }, {\n    id: 3,\n    title: 'in progress',\n    tasks: []\n  }, {\n    id: 4,\n    title: 'finished',\n    tasks: []\n  }]);\n  // \tconst [inputValue, setInputValue] = useState('');\n  // \tconst [isLoaded, setIsLoaded] = useState(false);\n\n  // \tconst onChangeImputValue = (event)=>{\n  // \t\tsetInputValue(event.target.value)\n  // \t};\n  // \tconst onClickAddTask= ()=>{\n  // \t\t\tif(inputValue && !tasks.includes(inputValue)){\n  // \t\t\t\tsetTasks((prev)=>[...prev, inputValue])\n  // \t\t\t\tsetInputValue('');\n  // \t\t\t}else{\n  // \t\t\t\talert(\"Please write some task into input\")\n  // \t\t\t} \n  // \t};\n  // \tconst deleteTaskFromList = (index)=>{\n  // \t\tsetTasks(tasks.filter((_, _index) => _index != index));\n  // \t}\n\n  // \tuseEffect(() => {\n  // \t\tif (isLoaded) {\n  // \t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks))\n  // \t\t}\n  // }, [tasks, isLoaded])\n\n  // useEffect(() => {\n  // \t\tconst tasks = localStorage.getItem('tasks');\n  // \t\tif (tasks) {\n  // \t\t\t\tsetTasks(JSON.parse(tasks))\n  // \t\t}\n  // \t\tsetIsLoaded(true);\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.board,\n    children: sections.map((obj, index) => /*#__PURE__*/_jsxDEV(Column, {\n      id: obj.id,\n      title: obj.title,\n      tasks: obj.tasks,\n      section: obj\n      // isLoaded={isLoaded}\n      // onChangeImputValue={onChangeImputValue}\n      // onClickAddTask={onClickAddTask}\n      // deleteTaskFromList={deleteTaskFromList}\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_s(Board, \"jtIDXM9yOtJoOD/U6puN5KkSljo=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Column","css","useTasks","useState","jsxDEV","_jsxDEV","Board","_s","sections","setSections","id","title","tasks","className","board","children","map","obj","index","section","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olyalyzo/projects/canban-board/src/components/board/Board.jsx"],"sourcesContent":["import {Column} from \"./column/Column\";\nimport css from './board.module.scss';\nimport { useTasks } from '../../contexts/use-task';\nimport { useState } from 'react';\n\n\n\nexport const Board = () => {\n\t\n\tconst [sections, setSections] = useState([\n\t\t{id: 1, title: 'backlog', tasks:[{id:1, title: 111}]},\n\t\t{id: 2, title: 'ready', tasks:[]},\n\t\t{id: 3, title: 'in progress', tasks:[]},\n\t\t{id: 4, title: 'finished', tasks:[]}\n]);\n// \tconst [inputValue, setInputValue] = useState('');\n// \tconst [isLoaded, setIsLoaded] = useState(false);\n\n\t\n// \tconst onChangeImputValue = (event)=>{\n// \t\tsetInputValue(event.target.value)\n// \t};\n// \tconst onClickAddTask= ()=>{\n// \t\t\tif(inputValue && !tasks.includes(inputValue)){\n// \t\t\t\tsetTasks((prev)=>[...prev, inputValue])\n// \t\t\t\tsetInputValue('');\n// \t\t\t}else{\n// \t\t\t\talert(\"Please write some task into input\")\n// \t\t\t} \n// \t};\n// \tconst deleteTaskFromList = (index)=>{\n// \t\tsetTasks(tasks.filter((_, _index) => _index != index));\n// \t}\n\n// \tuseEffect(() => {\n// \t\tif (isLoaded) {\n// \t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks))\n// \t\t}\n// }, [tasks, isLoaded])\n\n// useEffect(() => {\n// \t\tconst tasks = localStorage.getItem('tasks');\n// \t\tif (tasks) {\n// \t\t\t\tsetTasks(JSON.parse(tasks))\n// \t\t}\n// \t\tsetIsLoaded(true);\n// }, [])\n\n  return (\n\t\t<div className={css.board}>\n\t\t\t{sections.map(\n\t\t\t\t(obj, index) =>\n\t\t\t\t\t(<Column \n\t\t\t\t\tkey={index}\n\t\t\t\t\tid={obj.id}\n\t\t\t\t\ttitle={obj.title}\n\t\t\t\t\ttasks={obj.tasks}\n\t\t\t\t\tsection={obj}\n\t\t\t\t\t// isLoaded={isLoaded}\n\t\t\t\t\t// onChangeImputValue={onChangeImputValue}\n\t\t\t\t\t// onClickAddTask={onClickAddTask}\n\t\t\t\t\t// deleteTaskFromList={deleteTaskFromList}\n\t\t\t\t/>)\n\t\t\t)}\n\t\t</div>\n    )\n}\n"],"mappings":";;AAAA,SAAQA,MAAM,QAAO,iBAAiB;AACtC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CACxC;IAACO,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAC,CAAC;MAACF,EAAE,EAAC,CAAC;MAAEC,KAAK,EAAE;IAAG,CAAC;EAAC,CAAC,EACrD;IAACD,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAC;EAAE,CAAC,EACjC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAC;EAAE,CAAC,EACvC;IAACF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAC;EAAE,CAAC,CACrC,CAAC;EACF;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACAP,OAAA;IAAKQ,SAAS,EAAEZ,GAAG,CAACa,KAAM;IAAAC,QAAA,EACxBP,QAAQ,CAACQ,GAAG,CACZ,CAACC,GAAG,EAAEC,KAAK,kBACTb,OAAA,CAACL,MAAM;MAERU,EAAE,EAAEO,GAAG,CAACP,EAAG;MACXC,KAAK,EAAEM,GAAG,CAACN,KAAM;MACjBC,KAAK,EAAEK,GAAG,CAACL,KAAM;MACjBO,OAAO,EAAEF;MACT;MACA;MACA;MACA;IAAA,GARKC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASV,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAAAhB,EAAA,CA3DYD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}